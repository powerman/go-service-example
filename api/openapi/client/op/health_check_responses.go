// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/powerman/go-service-example/api/openapi/model"
)

// HealthCheckReader is a Reader for the HealthCheck structure.
type HealthCheckReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HealthCheckReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHealthCheckOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewHealthCheckDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewHealthCheckOK creates a HealthCheckOK with default headers values
func NewHealthCheckOK() *HealthCheckOK {
	return &HealthCheckOK{}
}

/*HealthCheckOK handles this case with default header values.

Extra details about service status, if any.
*/
type HealthCheckOK struct {
	Payload interface{}
}

func (o *HealthCheckOK) Error() string {
	return fmt.Sprintf("[GET /health-check][%d] healthCheckOK  %+v", 200, o.Payload)
}

func (o *HealthCheckOK) GetPayload() interface{} {
	return o.Payload
}

func (o *HealthCheckOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHealthCheckDefault creates a HealthCheckDefault with default headers values
func NewHealthCheckDefault(code int) *HealthCheckDefault {
	return &HealthCheckDefault{
		_statusCode: code,
	}
}

/*HealthCheckDefault handles this case with default header values.

General errors using same model as used by go-swagger for validation errors.
*/
type HealthCheckDefault struct {
	_statusCode int

	Payload *model.Error
}

// Code gets the status code for the health check default response
func (o *HealthCheckDefault) Code() int {
	return o._statusCode
}

func (o *HealthCheckDefault) Error() string {
	return fmt.Sprintf("[GET /health-check][%d] healthCheck default  %+v", o._statusCode, o.Payload)
}

func (o *HealthCheckDefault) GetPayload() *model.Error {
	return o.Payload
}

func (o *HealthCheckDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
