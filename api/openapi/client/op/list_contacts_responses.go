// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/powerman/go-service-example/api/openapi/model"
)

// ListContactsReader is a Reader for the ListContacts structure.
type ListContactsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListContactsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListContactsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewListContactsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListContactsOK creates a ListContactsOK with default headers values
func NewListContactsOK() *ListContactsOK {
	return &ListContactsOK{}
}

/*ListContactsOK handles this case with default header values.

OK
*/
type ListContactsOK struct {
	Payload []*model.Contact
}

func (o *ListContactsOK) Error() string {
	return fmt.Sprintf("[GET /contacts][%d] listContactsOK  %+v", 200, o.Payload)
}

func (o *ListContactsOK) GetPayload() []*model.Contact {
	return o.Payload
}

func (o *ListContactsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListContactsDefault creates a ListContactsDefault with default headers values
func NewListContactsDefault(code int) *ListContactsDefault {
	return &ListContactsDefault{
		_statusCode: code,
	}
}

/*ListContactsDefault handles this case with default header values.

General errors using same model as used by go-swagger for validation errors.
*/
type ListContactsDefault struct {
	_statusCode int

	Payload *model.Error
}

// Code gets the status code for the list contacts default response
func (o *ListContactsDefault) Code() int {
	return o._statusCode
}

func (o *ListContactsDefault) Error() string {
	return fmt.Sprintf("[GET /contacts][%d] listContacts default  %+v", o._statusCode, o.Payload)
}

func (o *ListContactsDefault) GetPayload() *model.Error {
	return o.Payload
}

func (o *ListContactsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ListContactsBody list contacts body
swagger:model ListContactsBody
*/
type ListContactsBody struct {
	model.SeekPagination
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *ListContactsBody) UnmarshalJSON(raw []byte) error {
	// ListContactsParamsBodyAO0
	var listContactsParamsBodyAO0 model.SeekPagination
	if err := swag.ReadJSON(raw, &listContactsParamsBodyAO0); err != nil {
		return err
	}
	o.SeekPagination = listContactsParamsBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o ListContactsBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	listContactsParamsBodyAO0, err := swag.WriteJSON(o.SeekPagination)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, listContactsParamsBodyAO0)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this list contacts body
func (o *ListContactsBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with model.SeekPagination
	if err := o.SeekPagination.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *ListContactsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListContactsBody) UnmarshalBinary(b []byte) error {
	var res ListContactsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
